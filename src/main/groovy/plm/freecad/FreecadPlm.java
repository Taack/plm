// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: freecad_plm.proto
// Protobuf Java Version: 4.27.2

package plm.freecad;

public final class FreecadPlm {
  private FreecadPlm() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      FreecadPlm.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlmFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plm.freecad.PlmFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string name = 12;</code>
     * @return The name.
     */
    String getName();
    /**
     * <code>string name = 12;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    String getFileName();
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>string label = 3;</code>
     * @return The label.
     */
    String getLabel();
    /**
     * <code>string label = 3;</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>string lastModifiedBy = 4;</code>
     * @return The lastModifiedBy.
     */
    String getLastModifiedBy();
    /**
     * <code>string lastModifiedBy = 4;</code>
     * @return The bytes for lastModifiedBy.
     */
    com.google.protobuf.ByteString
        getLastModifiedByBytes();

    /**
     * <code>string lastModifiedDate = 5;</code>
     * @return The lastModifiedDate.
     */
    String getLastModifiedDate();
    /**
     * <code>string lastModifiedDate = 5;</code>
     * @return The bytes for lastModifiedDate.
     */
    com.google.protobuf.ByteString
        getLastModifiedDateBytes();

    /**
     * <code>string comment = 6;</code>
     * @return The comment.
     */
    String getComment();
    /**
     * <code>string comment = 6;</code>
     * @return The bytes for comment.
     */
    com.google.protobuf.ByteString
        getCommentBytes();

    /**
     * <code>string company = 7;</code>
     * @return The company.
     */
    String getCompany();
    /**
     * <code>string company = 7;</code>
     * @return The bytes for company.
     */
    com.google.protobuf.ByteString
        getCompanyBytes();

    /**
     * <code>string createdBy = 8;</code>
     * @return The createdBy.
     */
    String getCreatedBy();
    /**
     * <code>string createdBy = 8;</code>
     * @return The bytes for createdBy.
     */
    com.google.protobuf.ByteString
        getCreatedByBytes();

    /**
     * <code>string createdDate = 9;</code>
     * @return The createdDate.
     */
    String getCreatedDate();
    /**
     * <code>string createdDate = 9;</code>
     * @return The bytes for createdDate.
     */
    com.google.protobuf.ByteString
        getCreatedDateBytes();

    /**
     * <code>repeated string externalLink = 10;</code>
     * @return A list containing the externalLink.
     */
    java.util.List<String>
        getExternalLinkList();
    /**
     * <code>repeated string externalLink = 10;</code>
     * @return The count of externalLink.
     */
    int getExternalLinkCount();
    /**
     * <code>repeated string externalLink = 10;</code>
     * @param index The index of the element to return.
     * @return The externalLink at the given index.
     */
    String getExternalLink(int index);
    /**
     * <code>repeated string externalLink = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the externalLink at the given index.
     */
    com.google.protobuf.ByteString
        getExternalLinkBytes(int index);

    /**
     * <code>bytes fileContent = 11;</code>
     * @return The fileContent.
     */
    com.google.protobuf.ByteString getFileContent();

    /**
     * <code>int64 cTimeNs = 13;</code>
     * @return The cTimeNs.
     */
    long getCTimeNs();

    /**
     * <code>int64 uTimeNs = 14;</code>
     * @return The uTimeNs.
     */
    long getUTimeNs();
  }
  /**
   * Protobuf type {@code plm.freecad.PlmFile}
   */
  public static final class PlmFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:plm.freecad.PlmFile)
      PlmFileOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        PlmFile.class.getName());
    }
    // Use PlmFile.newBuilder() to construct.
    private PlmFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PlmFile() {
      id_ = "";
      name_ = "";
      fileName_ = "";
      label_ = "";
      lastModifiedBy_ = "";
      lastModifiedDate_ = "";
      comment_ = "";
      company_ = "";
      createdBy_ = "";
      createdDate_ = "";
      externalLink_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      fileContent_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FreecadPlm.internal_static_plm_freecad_PlmFile_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FreecadPlm.internal_static_plm_freecad_PlmFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlmFile.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object id_ = "";
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @Override
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private volatile Object name_ = "";
    /**
     * <code>string name = 12;</code>
     * @return The name.
     */
    @Override
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 12;</code>
     * @return The bytes for name.
     */
    @Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object fileName_ = "";
    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    @Override
    public String getFileName() {
      Object ref = fileName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    @Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABEL_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile Object label_ = "";
    /**
     * <code>string label = 3;</code>
     * @return The label.
     */
    @Override
    public String getLabel() {
      Object ref = label_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 3;</code>
     * @return The bytes for label.
     */
    @Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTMODIFIEDBY_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile Object lastModifiedBy_ = "";
    /**
     * <code>string lastModifiedBy = 4;</code>
     * @return The lastModifiedBy.
     */
    @Override
    public String getLastModifiedBy() {
      Object ref = lastModifiedBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        lastModifiedBy_ = s;
        return s;
      }
    }
    /**
     * <code>string lastModifiedBy = 4;</code>
     * @return The bytes for lastModifiedBy.
     */
    @Override
    public com.google.protobuf.ByteString
        getLastModifiedByBytes() {
      Object ref = lastModifiedBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        lastModifiedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTMODIFIEDDATE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile Object lastModifiedDate_ = "";
    /**
     * <code>string lastModifiedDate = 5;</code>
     * @return The lastModifiedDate.
     */
    @Override
    public String getLastModifiedDate() {
      Object ref = lastModifiedDate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        lastModifiedDate_ = s;
        return s;
      }
    }
    /**
     * <code>string lastModifiedDate = 5;</code>
     * @return The bytes for lastModifiedDate.
     */
    @Override
    public com.google.protobuf.ByteString
        getLastModifiedDateBytes() {
      Object ref = lastModifiedDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        lastModifiedDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMENT_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile Object comment_ = "";
    /**
     * <code>string comment = 6;</code>
     * @return The comment.
     */
    @Override
    public String getComment() {
      Object ref = comment_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        comment_ = s;
        return s;
      }
    }
    /**
     * <code>string comment = 6;</code>
     * @return The bytes for comment.
     */
    @Override
    public com.google.protobuf.ByteString
        getCommentBytes() {
      Object ref = comment_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        comment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPANY_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile Object company_ = "";
    /**
     * <code>string company = 7;</code>
     * @return The company.
     */
    @Override
    public String getCompany() {
      Object ref = company_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        company_ = s;
        return s;
      }
    }
    /**
     * <code>string company = 7;</code>
     * @return The bytes for company.
     */
    @Override
    public com.google.protobuf.ByteString
        getCompanyBytes() {
      Object ref = company_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        company_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDBY_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile Object createdBy_ = "";
    /**
     * <code>string createdBy = 8;</code>
     * @return The createdBy.
     */
    @Override
    public String getCreatedBy() {
      Object ref = createdBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        createdBy_ = s;
        return s;
      }
    }
    /**
     * <code>string createdBy = 8;</code>
     * @return The bytes for createdBy.
     */
    @Override
    public com.google.protobuf.ByteString
        getCreatedByBytes() {
      Object ref = createdBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        createdBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDDATE_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile Object createdDate_ = "";
    /**
     * <code>string createdDate = 9;</code>
     * @return The createdDate.
     */
    @Override
    public String getCreatedDate() {
      Object ref = createdDate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        createdDate_ = s;
        return s;
      }
    }
    /**
     * <code>string createdDate = 9;</code>
     * @return The bytes for createdDate.
     */
    @Override
    public com.google.protobuf.ByteString
        getCreatedDateBytes() {
      Object ref = createdDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        createdDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTERNALLINK_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList externalLink_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string externalLink = 10;</code>
     * @return A list containing the externalLink.
     */
    public com.google.protobuf.ProtocolStringList
        getExternalLinkList() {
      return externalLink_;
    }
    /**
     * <code>repeated string externalLink = 10;</code>
     * @return The count of externalLink.
     */
    public int getExternalLinkCount() {
      return externalLink_.size();
    }
    /**
     * <code>repeated string externalLink = 10;</code>
     * @param index The index of the element to return.
     * @return The externalLink at the given index.
     */
    public String getExternalLink(int index) {
      return externalLink_.get(index);
    }
    /**
     * <code>repeated string externalLink = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the externalLink at the given index.
     */
    public com.google.protobuf.ByteString
        getExternalLinkBytes(int index) {
      return externalLink_.getByteString(index);
    }

    public static final int FILECONTENT_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString fileContent_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes fileContent = 11;</code>
     * @return The fileContent.
     */
    @Override
    public com.google.protobuf.ByteString getFileContent() {
      return fileContent_;
    }

    public static final int CTIMENS_FIELD_NUMBER = 13;
    private long cTimeNs_ = 0L;
    /**
     * <code>int64 cTimeNs = 13;</code>
     * @return The cTimeNs.
     */
    @Override
    public long getCTimeNs() {
      return cTimeNs_;
    }

    public static final int UTIMENS_FIELD_NUMBER = 14;
    private long uTimeNs_ = 0L;
    /**
     * <code>int64 uTimeNs = 14;</code>
     * @return The uTimeNs.
     */
    @Override
    public long getUTimeNs() {
      return uTimeNs_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, label_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastModifiedBy_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, lastModifiedBy_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastModifiedDate_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, lastModifiedDate_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(comment_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, comment_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(company_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, company_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(createdBy_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, createdBy_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(createdDate_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 9, createdDate_);
      }
      for (int i = 0; i < externalLink_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 10, externalLink_.getRaw(i));
      }
      if (!fileContent_.isEmpty()) {
        output.writeBytes(11, fileContent_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, name_);
      }
      if (cTimeNs_ != 0L) {
        output.writeInt64(13, cTimeNs_);
      }
      if (uTimeNs_ != 0L) {
        output.writeInt64(14, uTimeNs_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, label_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastModifiedBy_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, lastModifiedBy_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastModifiedDate_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, lastModifiedDate_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(comment_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, comment_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(company_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, company_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(createdBy_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, createdBy_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(createdDate_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(9, createdDate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < externalLink_.size(); i++) {
          dataSize += computeStringSizeNoTag(externalLink_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExternalLinkList().size();
      }
      if (!fileContent_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, fileContent_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(12, name_);
      }
      if (cTimeNs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, cTimeNs_);
      }
      if (uTimeNs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, uTimeNs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlmFile)) {
        return super.equals(obj);
      }
      PlmFile other = (PlmFile) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getFileName()
          .equals(other.getFileName())) return false;
      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!getLastModifiedBy()
          .equals(other.getLastModifiedBy())) return false;
      if (!getLastModifiedDate()
          .equals(other.getLastModifiedDate())) return false;
      if (!getComment()
          .equals(other.getComment())) return false;
      if (!getCompany()
          .equals(other.getCompany())) return false;
      if (!getCreatedBy()
          .equals(other.getCreatedBy())) return false;
      if (!getCreatedDate()
          .equals(other.getCreatedDate())) return false;
      if (!getExternalLinkList()
          .equals(other.getExternalLinkList())) return false;
      if (!getFileContent()
          .equals(other.getFileContent())) return false;
      if (getCTimeNs()
          != other.getCTimeNs()) return false;
      if (getUTimeNs()
          != other.getUTimeNs()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (37 * hash) + LASTMODIFIEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getLastModifiedBy().hashCode();
      hash = (37 * hash) + LASTMODIFIEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getLastModifiedDate().hashCode();
      hash = (37 * hash) + COMMENT_FIELD_NUMBER;
      hash = (53 * hash) + getComment().hashCode();
      hash = (37 * hash) + COMPANY_FIELD_NUMBER;
      hash = (53 * hash) + getCompany().hashCode();
      hash = (37 * hash) + CREATEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedBy().hashCode();
      hash = (37 * hash) + CREATEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedDate().hashCode();
      if (getExternalLinkCount() > 0) {
        hash = (37 * hash) + EXTERNALLINK_FIELD_NUMBER;
        hash = (53 * hash) + getExternalLinkList().hashCode();
      }
      hash = (37 * hash) + FILECONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getFileContent().hashCode();
      hash = (37 * hash) + CTIMENS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCTimeNs());
      hash = (37 * hash) + UTIMENS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUTimeNs());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlmFile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlmFile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlmFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlmFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlmFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlmFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlmFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PlmFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static PlmFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static PlmFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlmFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PlmFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlmFile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code plm.freecad.PlmFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:plm.freecad.PlmFile)
        PlmFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FreecadPlm.internal_static_plm_freecad_PlmFile_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FreecadPlm.internal_static_plm_freecad_PlmFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlmFile.class, Builder.class);
      }

      // Construct using plm.freecad.FreecadPlm.PlmFile.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        name_ = "";
        fileName_ = "";
        label_ = "";
        lastModifiedBy_ = "";
        lastModifiedDate_ = "";
        comment_ = "";
        company_ = "";
        createdBy_ = "";
        createdDate_ = "";
        externalLink_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        fileContent_ = com.google.protobuf.ByteString.EMPTY;
        cTimeNs_ = 0L;
        uTimeNs_ = 0L;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FreecadPlm.internal_static_plm_freecad_PlmFile_descriptor;
      }

      @Override
      public PlmFile getDefaultInstanceForType() {
        return PlmFile.getDefaultInstance();
      }

      @Override
      public PlmFile build() {
        PlmFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PlmFile buildPartial() {
        PlmFile result = new PlmFile(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(PlmFile result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fileName_ = fileName_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.label_ = label_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.lastModifiedBy_ = lastModifiedBy_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.lastModifiedDate_ = lastModifiedDate_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.comment_ = comment_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.company_ = company_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.createdBy_ = createdBy_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.createdDate_ = createdDate_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          externalLink_.makeImmutable();
          result.externalLink_ = externalLink_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.fileContent_ = fileContent_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.cTimeNs_ = cTimeNs_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.uTimeNs_ = uTimeNs_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlmFile) {
          return mergeFrom((PlmFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlmFile other) {
        if (other == PlmFile.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getLastModifiedBy().isEmpty()) {
          lastModifiedBy_ = other.lastModifiedBy_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.getLastModifiedDate().isEmpty()) {
          lastModifiedDate_ = other.lastModifiedDate_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.getComment().isEmpty()) {
          comment_ = other.comment_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getCompany().isEmpty()) {
          company_ = other.company_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (!other.getCreatedBy().isEmpty()) {
          createdBy_ = other.createdBy_;
          bitField0_ |= 0x00000100;
          onChanged();
        }
        if (!other.getCreatedDate().isEmpty()) {
          createdDate_ = other.createdDate_;
          bitField0_ |= 0x00000200;
          onChanged();
        }
        if (!other.externalLink_.isEmpty()) {
          if (externalLink_.isEmpty()) {
            externalLink_ = other.externalLink_;
            bitField0_ |= 0x00000400;
          } else {
            ensureExternalLinkIsMutable();
            externalLink_.addAll(other.externalLink_);
          }
          onChanged();
        }
        if (other.getFileContent() != com.google.protobuf.ByteString.EMPTY) {
          setFileContent(other.getFileContent());
        }
        if (other.getCTimeNs() != 0L) {
          setCTimeNs(other.getCTimeNs());
        }
        if (other.getUTimeNs() != 0L) {
          setUTimeNs(other.getUTimeNs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                fileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 18
              case 26: {
                label_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 26
              case 34: {
                lastModifiedBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 34
              case 42: {
                lastModifiedDate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 42
              case 50: {
                comment_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 50
              case 58: {
                company_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 58
              case 66: {
                createdBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 66
              case 74: {
                createdDate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000200;
                break;
              } // case 74
              case 82: {
                String s = input.readStringRequireUtf8();
                ensureExternalLinkIsMutable();
                externalLink_.add(s);
                break;
              } // case 82
              case 90: {
                fileContent_ = input.readBytes();
                bitField0_ |= 0x00000800;
                break;
              } // case 90
              case 98: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 98
              case 104: {
                cTimeNs_ = input.readInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                uTimeNs_ = input.readInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 12;</code>
       * @return The name.
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 12;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 12;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 12;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private Object fileName_ = "";
      /**
       * <code>string fileName = 2;</code>
       * @return The fileName.
       */
      public String getFileName() {
        Object ref = fileName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        fileName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        fileName_ = getDefaultInstance().getFileName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private Object label_ = "";
      /**
       * <code>string label = 3;</code>
       * @return The label.
       */
      public String getLabel() {
        Object ref = label_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string label = 3;</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 3;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        label_ = getDefaultInstance().getLabel();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3;</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        label_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private Object lastModifiedBy_ = "";
      /**
       * <code>string lastModifiedBy = 4;</code>
       * @return The lastModifiedBy.
       */
      public String getLastModifiedBy() {
        Object ref = lastModifiedBy_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          lastModifiedBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string lastModifiedBy = 4;</code>
       * @return The bytes for lastModifiedBy.
       */
      public com.google.protobuf.ByteString
          getLastModifiedByBytes() {
        Object ref = lastModifiedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          lastModifiedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lastModifiedBy = 4;</code>
       * @param value The lastModifiedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLastModifiedBy(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        lastModifiedBy_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>string lastModifiedBy = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastModifiedBy() {
        lastModifiedBy_ = getDefaultInstance().getLastModifiedBy();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>string lastModifiedBy = 4;</code>
       * @param value The bytes for lastModifiedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLastModifiedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        lastModifiedBy_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private Object lastModifiedDate_ = "";
      /**
       * <code>string lastModifiedDate = 5;</code>
       * @return The lastModifiedDate.
       */
      public String getLastModifiedDate() {
        Object ref = lastModifiedDate_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          lastModifiedDate_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string lastModifiedDate = 5;</code>
       * @return The bytes for lastModifiedDate.
       */
      public com.google.protobuf.ByteString
          getLastModifiedDateBytes() {
        Object ref = lastModifiedDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          lastModifiedDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lastModifiedDate = 5;</code>
       * @param value The lastModifiedDate to set.
       * @return This builder for chaining.
       */
      public Builder setLastModifiedDate(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        lastModifiedDate_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>string lastModifiedDate = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastModifiedDate() {
        lastModifiedDate_ = getDefaultInstance().getLastModifiedDate();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>string lastModifiedDate = 5;</code>
       * @param value The bytes for lastModifiedDate to set.
       * @return This builder for chaining.
       */
      public Builder setLastModifiedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        lastModifiedDate_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private Object comment_ = "";
      /**
       * <code>string comment = 6;</code>
       * @return The comment.
       */
      public String getComment() {
        Object ref = comment_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          comment_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string comment = 6;</code>
       * @return The bytes for comment.
       */
      public com.google.protobuf.ByteString
          getCommentBytes() {
        Object ref = comment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          comment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string comment = 6;</code>
       * @param value The comment to set.
       * @return This builder for chaining.
       */
      public Builder setComment(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        comment_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>string comment = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearComment() {
        comment_ = getDefaultInstance().getComment();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>string comment = 6;</code>
       * @param value The bytes for comment to set.
       * @return This builder for chaining.
       */
      public Builder setCommentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        comment_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private Object company_ = "";
      /**
       * <code>string company = 7;</code>
       * @return The company.
       */
      public String getCompany() {
        Object ref = company_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          company_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string company = 7;</code>
       * @return The bytes for company.
       */
      public com.google.protobuf.ByteString
          getCompanyBytes() {
        Object ref = company_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          company_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string company = 7;</code>
       * @param value The company to set.
       * @return This builder for chaining.
       */
      public Builder setCompany(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        company_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>string company = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompany() {
        company_ = getDefaultInstance().getCompany();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>string company = 7;</code>
       * @param value The bytes for company to set.
       * @return This builder for chaining.
       */
      public Builder setCompanyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        company_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private Object createdBy_ = "";
      /**
       * <code>string createdBy = 8;</code>
       * @return The createdBy.
       */
      public String getCreatedBy() {
        Object ref = createdBy_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          createdBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string createdBy = 8;</code>
       * @return The bytes for createdBy.
       */
      public com.google.protobuf.ByteString
          getCreatedByBytes() {
        Object ref = createdBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          createdBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string createdBy = 8;</code>
       * @param value The createdBy to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedBy(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        createdBy_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>string createdBy = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatedBy() {
        createdBy_ = getDefaultInstance().getCreatedBy();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>string createdBy = 8;</code>
       * @param value The bytes for createdBy to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        createdBy_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private Object createdDate_ = "";
      /**
       * <code>string createdDate = 9;</code>
       * @return The createdDate.
       */
      public String getCreatedDate() {
        Object ref = createdDate_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          createdDate_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string createdDate = 9;</code>
       * @return The bytes for createdDate.
       */
      public com.google.protobuf.ByteString
          getCreatedDateBytes() {
        Object ref = createdDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          createdDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string createdDate = 9;</code>
       * @param value The createdDate to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedDate(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        createdDate_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>string createdDate = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatedDate() {
        createdDate_ = getDefaultInstance().getCreatedDate();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>string createdDate = 9;</code>
       * @param value The bytes for createdDate to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        createdDate_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList externalLink_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureExternalLinkIsMutable() {
        if (!externalLink_.isModifiable()) {
          externalLink_ = new com.google.protobuf.LazyStringArrayList(externalLink_);
        }
        bitField0_ |= 0x00000400;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @return A list containing the externalLink.
       */
      public com.google.protobuf.ProtocolStringList
          getExternalLinkList() {
        externalLink_.makeImmutable();
        return externalLink_;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @return The count of externalLink.
       */
      public int getExternalLinkCount() {
        return externalLink_.size();
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param index The index of the element to return.
       * @return The externalLink at the given index.
       */
      public String getExternalLink(int index) {
        return externalLink_.get(index);
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param index The index of the value to return.
       * @return The bytes of the externalLink at the given index.
       */
      public com.google.protobuf.ByteString
          getExternalLinkBytes(int index) {
        return externalLink_.getByteString(index);
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param index The index to set the value at.
       * @param value The externalLink to set.
       * @return This builder for chaining.
       */
      public Builder setExternalLink(
          int index, String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExternalLinkIsMutable();
        externalLink_.set(index, value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param value The externalLink to add.
       * @return This builder for chaining.
       */
      public Builder addExternalLink(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExternalLinkIsMutable();
        externalLink_.add(value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param values The externalLink to add.
       * @return This builder for chaining.
       */
      public Builder addAllExternalLink(
          Iterable<String> values) {
        ensureExternalLinkIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, externalLink_);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternalLink() {
        externalLink_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string externalLink = 10;</code>
       * @param value The bytes of the externalLink to add.
       * @return This builder for chaining.
       */
      public Builder addExternalLinkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureExternalLinkIsMutable();
        externalLink_.add(value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fileContent_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes fileContent = 11;</code>
       * @return The fileContent.
       */
      @Override
      public com.google.protobuf.ByteString getFileContent() {
        return fileContent_;
      }
      /**
       * <code>bytes fileContent = 11;</code>
       * @param value The fileContent to set.
       * @return This builder for chaining.
       */
      public Builder setFileContent(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        fileContent_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>bytes fileContent = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileContent() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fileContent_ = getDefaultInstance().getFileContent();
        onChanged();
        return this;
      }

      private long cTimeNs_ ;
      /**
       * <code>int64 cTimeNs = 13;</code>
       * @return The cTimeNs.
       */
      @Override
      public long getCTimeNs() {
        return cTimeNs_;
      }
      /**
       * <code>int64 cTimeNs = 13;</code>
       * @param value The cTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setCTimeNs(long value) {

        cTimeNs_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 cTimeNs = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearCTimeNs() {
        bitField0_ = (bitField0_ & ~0x00001000);
        cTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long uTimeNs_ ;
      /**
       * <code>int64 uTimeNs = 14;</code>
       * @return The uTimeNs.
       */
      @Override
      public long getUTimeNs() {
        return uTimeNs_;
      }
      /**
       * <code>int64 uTimeNs = 14;</code>
       * @param value The uTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setUTimeNs(long value) {

        uTimeNs_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 uTimeNs = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearUTimeNs() {
        bitField0_ = (bitField0_ & ~0x00002000);
        uTimeNs_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plm.freecad.PlmFile)
    }

    // @@protoc_insertion_point(class_scope:plm.freecad.PlmFile)
    private static final PlmFile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlmFile();
    }

    public static PlmFile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlmFile>
        PARSER = new com.google.protobuf.AbstractParser<PlmFile>() {
      @Override
      public PlmFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PlmFile> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PlmFile> getParserForType() {
      return PARSER;
    }

    @Override
    public PlmFile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlmLinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plm.freecad.PlmLink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string linkedObject = 1;</code>
     * @return The linkedObject.
     */
    String getLinkedObject();
    /**
     * <code>string linkedObject = 1;</code>
     * @return The bytes for linkedObject.
     */
    com.google.protobuf.ByteString
        getLinkedObjectBytes();

    /**
     * <code>bool linkClaimChild = 2;</code>
     * @return The linkClaimChild.
     */
    boolean getLinkClaimChild();

    /**
     * <code>bool linkTransform = 3;</code>
     * @return The linkTransform.
     */
    boolean getLinkTransform();

    /**
     * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
     * @return The enum numeric value on the wire for linkCopyOnChange.
     */
    int getLinkCopyOnChangeValue();
    /**
     * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
     * @return The linkCopyOnChange.
     */
    PlmLink.LinkCopyOnChangeEnum getLinkCopyOnChange();

    /**
     * <code>double scale = 5;</code>
     * @return The scale.
     */
    double getScale();

    /**
     * <code>string plmFile = 6;</code>
     * @return The plmFile.
     */
    String getPlmFile();
    /**
     * <code>string plmFile = 6;</code>
     * @return The bytes for plmFile.
     */
    com.google.protobuf.ByteString
        getPlmFileBytes();
  }
  /**
   * Protobuf type {@code plm.freecad.PlmLink}
   */
  public static final class PlmLink extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:plm.freecad.PlmLink)
      PlmLinkOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        PlmLink.class.getName());
    }
    // Use PlmLink.newBuilder() to construct.
    private PlmLink(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PlmLink() {
      linkedObject_ = "";
      linkCopyOnChange_ = 0;
      plmFile_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FreecadPlm.internal_static_plm_freecad_PlmLink_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FreecadPlm.internal_static_plm_freecad_PlmLink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlmLink.class, Builder.class);
    }

    /**
     * Protobuf enum {@code plm.freecad.PlmLink.LinkCopyOnChangeEnum}
     */
    public enum LinkCopyOnChangeEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Disabled = 0;</code>
       */
      Disabled(0),
      /**
       * <code>Enabled = 1;</code>
       */
      Enabled(1),
      /**
       * <code>Owned = 2;</code>
       */
      Owned(2),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 27,
          /* patch= */ 2,
          /* suffix= */ "",
          LinkCopyOnChangeEnum.class.getName());
      }
      /**
       * <code>Disabled = 0;</code>
       */
      public static final int Disabled_VALUE = 0;
      /**
       * <code>Enabled = 1;</code>
       */
      public static final int Enabled_VALUE = 1;
      /**
       * <code>Owned = 2;</code>
       */
      public static final int Owned_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static LinkCopyOnChangeEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LinkCopyOnChangeEnum forNumber(int value) {
        switch (value) {
          case 0: return Disabled;
          case 1: return Enabled;
          case 2: return Owned;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LinkCopyOnChangeEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LinkCopyOnChangeEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LinkCopyOnChangeEnum>() {
              public LinkCopyOnChangeEnum findValueByNumber(int number) {
                return LinkCopyOnChangeEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return PlmLink.getDescriptor().getEnumTypes().get(0);
      }

      private static final LinkCopyOnChangeEnum[] VALUES = values();

      public static LinkCopyOnChangeEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LinkCopyOnChangeEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:plm.freecad.PlmLink.LinkCopyOnChangeEnum)
    }

    public static final int LINKEDOBJECT_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object linkedObject_ = "";
    /**
     * <code>string linkedObject = 1;</code>
     * @return The linkedObject.
     */
    @Override
    public String getLinkedObject() {
      Object ref = linkedObject_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        linkedObject_ = s;
        return s;
      }
    }
    /**
     * <code>string linkedObject = 1;</code>
     * @return The bytes for linkedObject.
     */
    @Override
    public com.google.protobuf.ByteString
        getLinkedObjectBytes() {
      Object ref = linkedObject_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        linkedObject_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINKCLAIMCHILD_FIELD_NUMBER = 2;
    private boolean linkClaimChild_ = false;
    /**
     * <code>bool linkClaimChild = 2;</code>
     * @return The linkClaimChild.
     */
    @Override
    public boolean getLinkClaimChild() {
      return linkClaimChild_;
    }

    public static final int LINKTRANSFORM_FIELD_NUMBER = 3;
    private boolean linkTransform_ = false;
    /**
     * <code>bool linkTransform = 3;</code>
     * @return The linkTransform.
     */
    @Override
    public boolean getLinkTransform() {
      return linkTransform_;
    }

    public static final int LINKCOPYONCHANGE_FIELD_NUMBER = 4;
    private int linkCopyOnChange_ = 0;
    /**
     * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
     * @return The enum numeric value on the wire for linkCopyOnChange.
     */
    @Override public int getLinkCopyOnChangeValue() {
      return linkCopyOnChange_;
    }
    /**
     * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
     * @return The linkCopyOnChange.
     */
    @Override public LinkCopyOnChangeEnum getLinkCopyOnChange() {
      LinkCopyOnChangeEnum result = LinkCopyOnChangeEnum.forNumber(linkCopyOnChange_);
      return result == null ? LinkCopyOnChangeEnum.UNRECOGNIZED : result;
    }

    public static final int SCALE_FIELD_NUMBER = 5;
    private double scale_ = 0D;
    /**
     * <code>double scale = 5;</code>
     * @return The scale.
     */
    @Override
    public double getScale() {
      return scale_;
    }

    public static final int PLMFILE_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile Object plmFile_ = "";
    /**
     * <code>string plmFile = 6;</code>
     * @return The plmFile.
     */
    @Override
    public String getPlmFile() {
      Object ref = plmFile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        plmFile_ = s;
        return s;
      }
    }
    /**
     * <code>string plmFile = 6;</code>
     * @return The bytes for plmFile.
     */
    @Override
    public com.google.protobuf.ByteString
        getPlmFileBytes() {
      Object ref = plmFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        plmFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(linkedObject_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, linkedObject_);
      }
      if (linkClaimChild_ != false) {
        output.writeBool(2, linkClaimChild_);
      }
      if (linkTransform_ != false) {
        output.writeBool(3, linkTransform_);
      }
      if (linkCopyOnChange_ != LinkCopyOnChangeEnum.Disabled.getNumber()) {
        output.writeEnum(4, linkCopyOnChange_);
      }
      if (Double.doubleToRawLongBits(scale_) != 0) {
        output.writeDouble(5, scale_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(plmFile_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, plmFile_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(linkedObject_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, linkedObject_);
      }
      if (linkClaimChild_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, linkClaimChild_);
      }
      if (linkTransform_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, linkTransform_);
      }
      if (linkCopyOnChange_ != LinkCopyOnChangeEnum.Disabled.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, linkCopyOnChange_);
      }
      if (Double.doubleToRawLongBits(scale_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, scale_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(plmFile_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, plmFile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlmLink)) {
        return super.equals(obj);
      }
      PlmLink other = (PlmLink) obj;

      if (!getLinkedObject()
          .equals(other.getLinkedObject())) return false;
      if (getLinkClaimChild()
          != other.getLinkClaimChild()) return false;
      if (getLinkTransform()
          != other.getLinkTransform()) return false;
      if (linkCopyOnChange_ != other.linkCopyOnChange_) return false;
      if (Double.doubleToLongBits(getScale())
          != Double.doubleToLongBits(
              other.getScale())) return false;
      if (!getPlmFile()
          .equals(other.getPlmFile())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LINKEDOBJECT_FIELD_NUMBER;
      hash = (53 * hash) + getLinkedObject().hashCode();
      hash = (37 * hash) + LINKCLAIMCHILD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLinkClaimChild());
      hash = (37 * hash) + LINKTRANSFORM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLinkTransform());
      hash = (37 * hash) + LINKCOPYONCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + linkCopyOnChange_;
      hash = (37 * hash) + SCALE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getScale()));
      hash = (37 * hash) + PLMFILE_FIELD_NUMBER;
      hash = (53 * hash) + getPlmFile().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static plm.freecad.FreecadPlm.PlmLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static plm.freecad.FreecadPlm.PlmLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static plm.freecad.FreecadPlm.PlmLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(plm.freecad.FreecadPlm.PlmLink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code plm.freecad.PlmLink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:plm.freecad.PlmLink)
        plm.freecad.FreecadPlm.PlmLinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_PlmLink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_PlmLink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                plm.freecad.FreecadPlm.PlmLink.class, plm.freecad.FreecadPlm.PlmLink.Builder.class);
      }

      // Construct using plm.freecad.FreecadPlm.PlmLink.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        linkedObject_ = "";
        linkClaimChild_ = false;
        linkTransform_ = false;
        linkCopyOnChange_ = 0;
        scale_ = 0D;
        plmFile_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_PlmLink_descriptor;
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmLink getDefaultInstanceForType() {
        return plm.freecad.FreecadPlm.PlmLink.getDefaultInstance();
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmLink build() {
        plm.freecad.FreecadPlm.PlmLink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmLink buildPartial() {
        plm.freecad.FreecadPlm.PlmLink result = new plm.freecad.FreecadPlm.PlmLink(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(plm.freecad.FreecadPlm.PlmLink result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.linkedObject_ = linkedObject_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.linkClaimChild_ = linkClaimChild_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.linkTransform_ = linkTransform_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.linkCopyOnChange_ = linkCopyOnChange_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.scale_ = scale_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.plmFile_ = plmFile_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof plm.freecad.FreecadPlm.PlmLink) {
          return mergeFrom((plm.freecad.FreecadPlm.PlmLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(plm.freecad.FreecadPlm.PlmLink other) {
        if (other == plm.freecad.FreecadPlm.PlmLink.getDefaultInstance()) return this;
        if (!other.getLinkedObject().isEmpty()) {
          linkedObject_ = other.linkedObject_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getLinkClaimChild() != false) {
          setLinkClaimChild(other.getLinkClaimChild());
        }
        if (other.getLinkTransform() != false) {
          setLinkTransform(other.getLinkTransform());
        }
        if (other.linkCopyOnChange_ != 0) {
          setLinkCopyOnChangeValue(other.getLinkCopyOnChangeValue());
        }
        if (other.getScale() != 0D) {
          setScale(other.getScale());
        }
        if (!other.getPlmFile().isEmpty()) {
          plmFile_ = other.plmFile_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                linkedObject_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                linkClaimChild_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                linkTransform_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                linkCopyOnChange_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                scale_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 50: {
                plmFile_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object linkedObject_ = "";
      /**
       * <code>string linkedObject = 1;</code>
       * @return The linkedObject.
       */
      public java.lang.String getLinkedObject() {
        java.lang.Object ref = linkedObject_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          linkedObject_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string linkedObject = 1;</code>
       * @return The bytes for linkedObject.
       */
      public com.google.protobuf.ByteString
          getLinkedObjectBytes() {
        java.lang.Object ref = linkedObject_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          linkedObject_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string linkedObject = 1;</code>
       * @param value The linkedObject to set.
       * @return This builder for chaining.
       */
      public Builder setLinkedObject(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        linkedObject_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string linkedObject = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinkedObject() {
        linkedObject_ = getDefaultInstance().getLinkedObject();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string linkedObject = 1;</code>
       * @param value The bytes for linkedObject to set.
       * @return This builder for chaining.
       */
      public Builder setLinkedObjectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        linkedObject_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean linkClaimChild_ ;
      /**
       * <code>bool linkClaimChild = 2;</code>
       * @return The linkClaimChild.
       */
      @java.lang.Override
      public boolean getLinkClaimChild() {
        return linkClaimChild_;
      }
      /**
       * <code>bool linkClaimChild = 2;</code>
       * @param value The linkClaimChild to set.
       * @return This builder for chaining.
       */
      public Builder setLinkClaimChild(boolean value) {

        linkClaimChild_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool linkClaimChild = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinkClaimChild() {
        bitField0_ = (bitField0_ & ~0x00000002);
        linkClaimChild_ = false;
        onChanged();
        return this;
      }

      private boolean linkTransform_ ;
      /**
       * <code>bool linkTransform = 3;</code>
       * @return The linkTransform.
       */
      @java.lang.Override
      public boolean getLinkTransform() {
        return linkTransform_;
      }
      /**
       * <code>bool linkTransform = 3;</code>
       * @param value The linkTransform to set.
       * @return This builder for chaining.
       */
      public Builder setLinkTransform(boolean value) {

        linkTransform_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bool linkTransform = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinkTransform() {
        bitField0_ = (bitField0_ & ~0x00000004);
        linkTransform_ = false;
        onChanged();
        return this;
      }

      private int linkCopyOnChange_ = 0;
      /**
       * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
       * @return The enum numeric value on the wire for linkCopyOnChange.
       */
      @java.lang.Override public int getLinkCopyOnChangeValue() {
        return linkCopyOnChange_;
      }
      /**
       * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
       * @param value The enum numeric value on the wire for linkCopyOnChange to set.
       * @return This builder for chaining.
       */
      public Builder setLinkCopyOnChangeValue(int value) {
        linkCopyOnChange_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
       * @return The linkCopyOnChange.
       */
      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmLink.LinkCopyOnChangeEnum getLinkCopyOnChange() {
        plm.freecad.FreecadPlm.PlmLink.LinkCopyOnChangeEnum result = plm.freecad.FreecadPlm.PlmLink.LinkCopyOnChangeEnum.forNumber(linkCopyOnChange_);
        return result == null ? plm.freecad.FreecadPlm.PlmLink.LinkCopyOnChangeEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
       * @param value The linkCopyOnChange to set.
       * @return This builder for chaining.
       */
      public Builder setLinkCopyOnChange(plm.freecad.FreecadPlm.PlmLink.LinkCopyOnChangeEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        linkCopyOnChange_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.plm.freecad.PlmLink.LinkCopyOnChangeEnum linkCopyOnChange = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinkCopyOnChange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        linkCopyOnChange_ = 0;
        onChanged();
        return this;
      }

      private double scale_ ;
      /**
       * <code>double scale = 5;</code>
       * @return The scale.
       */
      @java.lang.Override
      public double getScale() {
        return scale_;
      }
      /**
       * <code>double scale = 5;</code>
       * @param value The scale to set.
       * @return This builder for chaining.
       */
      public Builder setScale(double value) {

        scale_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double scale = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000010);
        scale_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object plmFile_ = "";
      /**
       * <code>string plmFile = 6;</code>
       * @return The plmFile.
       */
      public java.lang.String getPlmFile() {
        java.lang.Object ref = plmFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plmFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string plmFile = 6;</code>
       * @return The bytes for plmFile.
       */
      public com.google.protobuf.ByteString
          getPlmFileBytes() {
        java.lang.Object ref = plmFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plmFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string plmFile = 6;</code>
       * @param value The plmFile to set.
       * @return This builder for chaining.
       */
      public Builder setPlmFile(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        plmFile_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>string plmFile = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlmFile() {
        plmFile_ = getDefaultInstance().getPlmFile();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>string plmFile = 6;</code>
       * @param value The bytes for plmFile to set.
       * @return This builder for chaining.
       */
      public Builder setPlmFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        plmFile_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plm.freecad.PlmLink)
    }

    // @@protoc_insertion_point(class_scope:plm.freecad.PlmLink)
    private static final plm.freecad.FreecadPlm.PlmLink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new plm.freecad.FreecadPlm.PlmLink();
    }

    public static plm.freecad.FreecadPlm.PlmLink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlmLink>
        PARSER = new com.google.protobuf.AbstractParser<PlmLink>() {
      @java.lang.Override
      public PlmLink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PlmLink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlmLink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public plm.freecad.FreecadPlm.PlmLink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BucketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plm.freecad.Bucket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    int getPlmFilesCount();
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    boolean containsPlmFiles(
        java.lang.String key);
    /**
     * Use {@link #getPlmFilesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
    getPlmFiles();
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
    getPlmFilesMap();
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    /* nullable */
plm.freecad.FreecadPlm.PlmFile getPlmFilesOrDefault(
        java.lang.String key,
        /* nullable */
plm.freecad.FreecadPlm.PlmFile defaultValue);
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    plm.freecad.FreecadPlm.PlmFile getPlmFilesOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    int getLinksCount();
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    boolean containsLinks(
        java.lang.String key);
    /**
     * Use {@link #getLinksMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
    getLinks();
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
    getLinksMap();
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    /* nullable */
plm.freecad.FreecadPlm.PlmLink getLinksOrDefault(
        java.lang.String key,
        /* nullable */
plm.freecad.FreecadPlm.PlmLink defaultValue);
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    plm.freecad.FreecadPlm.PlmLink getLinksOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code plm.freecad.Bucket}
   */
  public static final class Bucket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:plm.freecad.Bucket)
      BucketOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        Bucket.class.getName());
    }
    // Use Bucket.newBuilder() to construct.
    private Bucket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Bucket() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetPlmFiles();
        case 2:
          return internalGetLinks();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              plm.freecad.FreecadPlm.Bucket.class, plm.freecad.FreecadPlm.Bucket.Builder.class);
    }

    public static final int PLMFILES_FIELD_NUMBER = 1;
    private static final class PlmFilesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, plm.freecad.FreecadPlm.PlmFile> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, plm.freecad.FreecadPlm.PlmFile>newDefaultInstance(
                  plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_PlmFilesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  plm.freecad.FreecadPlm.PlmFile.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, plm.freecad.FreecadPlm.PlmFile> plmFiles_;
    private com.google.protobuf.MapField<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
    internalGetPlmFiles() {
      if (plmFiles_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PlmFilesDefaultEntryHolder.defaultEntry);
      }
      return plmFiles_;
    }
    public int getPlmFilesCount() {
      return internalGetPlmFiles().getMap().size();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    @java.lang.Override
    public boolean containsPlmFiles(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPlmFiles().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPlmFilesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> getPlmFiles() {
      return getPlmFilesMap();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> getPlmFilesMap() {
      return internalGetPlmFiles().getMap();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
plm.freecad.FreecadPlm.PlmFile getPlmFilesOrDefault(
        java.lang.String key,
        /* nullable */
plm.freecad.FreecadPlm.PlmFile defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> map =
          internalGetPlmFiles().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
     */
    @java.lang.Override
    public plm.freecad.FreecadPlm.PlmFile getPlmFilesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> map =
          internalGetPlmFiles().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LINKS_FIELD_NUMBER = 2;
    private static final class LinksDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, plm.freecad.FreecadPlm.PlmLink> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, plm.freecad.FreecadPlm.PlmLink>newDefaultInstance(
                  plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_LinksEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  plm.freecad.FreecadPlm.PlmLink.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, plm.freecad.FreecadPlm.PlmLink> links_;
    private com.google.protobuf.MapField<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
    internalGetLinks() {
      if (links_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LinksDefaultEntryHolder.defaultEntry);
      }
      return links_;
    }
    public int getLinksCount() {
      return internalGetLinks().getMap().size();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    @java.lang.Override
    public boolean containsLinks(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLinks().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLinksMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> getLinks() {
      return getLinksMap();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> getLinksMap() {
      return internalGetLinks().getMap();
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
plm.freecad.FreecadPlm.PlmLink getLinksOrDefault(
        java.lang.String key,
        /* nullable */
plm.freecad.FreecadPlm.PlmLink defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> map =
          internalGetLinks().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
     */
    @java.lang.Override
    public plm.freecad.FreecadPlm.PlmLink getLinksOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> map =
          internalGetLinks().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetPlmFiles(),
          PlmFilesDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetLinks(),
          LinksDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, plm.freecad.FreecadPlm.PlmFile> entry
           : internalGetPlmFiles().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
        plmFiles__ = PlmFilesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, plmFiles__);
      }
      for (java.util.Map.Entry<java.lang.String, plm.freecad.FreecadPlm.PlmLink> entry
           : internalGetLinks().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
        links__ = LinksDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, links__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof plm.freecad.FreecadPlm.Bucket)) {
        return super.equals(obj);
      }
      plm.freecad.FreecadPlm.Bucket other = (plm.freecad.FreecadPlm.Bucket) obj;

      if (!internalGetPlmFiles().equals(
          other.internalGetPlmFiles())) return false;
      if (!internalGetLinks().equals(
          other.internalGetLinks())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetPlmFiles().getMap().isEmpty()) {
        hash = (37 * hash) + PLMFILES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPlmFiles().hashCode();
      }
      if (!internalGetLinks().getMap().isEmpty()) {
        hash = (37 * hash) + LINKS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLinks().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static plm.freecad.FreecadPlm.Bucket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static plm.freecad.FreecadPlm.Bucket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static plm.freecad.FreecadPlm.Bucket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(plm.freecad.FreecadPlm.Bucket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code plm.freecad.Bucket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:plm.freecad.Bucket)
        plm.freecad.FreecadPlm.BucketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetPlmFiles();
          case 2:
            return internalGetLinks();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutablePlmFiles();
          case 2:
            return internalGetMutableLinks();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                plm.freecad.FreecadPlm.Bucket.class, plm.freecad.FreecadPlm.Bucket.Builder.class);
      }

      // Construct using plm.freecad.FreecadPlm.Bucket.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutablePlmFiles().clear();
        internalGetMutableLinks().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return plm.freecad.FreecadPlm.internal_static_plm_freecad_Bucket_descriptor;
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.Bucket getDefaultInstanceForType() {
        return plm.freecad.FreecadPlm.Bucket.getDefaultInstance();
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.Bucket build() {
        plm.freecad.FreecadPlm.Bucket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public plm.freecad.FreecadPlm.Bucket buildPartial() {
        plm.freecad.FreecadPlm.Bucket result = new plm.freecad.FreecadPlm.Bucket(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(plm.freecad.FreecadPlm.Bucket result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.plmFiles_ = internalGetPlmFiles().build(PlmFilesDefaultEntryHolder.defaultEntry);
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.links_ = internalGetLinks().build(LinksDefaultEntryHolder.defaultEntry);
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof plm.freecad.FreecadPlm.Bucket) {
          return mergeFrom((plm.freecad.FreecadPlm.Bucket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(plm.freecad.FreecadPlm.Bucket other) {
        if (other == plm.freecad.FreecadPlm.Bucket.getDefaultInstance()) return this;
        internalGetMutablePlmFiles().mergeFrom(
            other.internalGetPlmFiles());
        bitField0_ |= 0x00000001;
        internalGetMutableLinks().mergeFrom(
            other.internalGetLinks());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
                plmFiles__ = input.readMessage(
                    PlmFilesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutablePlmFiles().ensureBuilderMap().put(
                    plmFiles__.getKey(), plmFiles__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
                links__ = input.readMessage(
                    LinksDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableLinks().ensureBuilderMap().put(
                    links__.getKey(), links__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private static final class PlmFilesConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder, plm.freecad.FreecadPlm.PlmFile> {
        @java.lang.Override
        public plm.freecad.FreecadPlm.PlmFile build(plm.freecad.FreecadPlm.PlmFileOrBuilder val) {
          if (val instanceof plm.freecad.FreecadPlm.PlmFile) { return (plm.freecad.FreecadPlm.PlmFile) val; }
          return ((plm.freecad.FreecadPlm.PlmFile.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmFile> defaultEntry() {
          return PlmFilesDefaultEntryHolder.defaultEntry;
        }
      };
      private static final PlmFilesConverter plmFilesConverter = new PlmFilesConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder, plm.freecad.FreecadPlm.PlmFile, plm.freecad.FreecadPlm.PlmFile.Builder> plmFiles_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder, plm.freecad.FreecadPlm.PlmFile, plm.freecad.FreecadPlm.PlmFile.Builder>
          internalGetPlmFiles() {
        if (plmFiles_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(plmFilesConverter);
        }
        return plmFiles_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder, plm.freecad.FreecadPlm.PlmFile, plm.freecad.FreecadPlm.PlmFile.Builder>
          internalGetMutablePlmFiles() {
        if (plmFiles_ == null) {
          plmFiles_ = new com.google.protobuf.MapFieldBuilder<>(plmFilesConverter);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return plmFiles_;
      }
      public int getPlmFilesCount() {
        return internalGetPlmFiles().ensureBuilderMap().size();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      @java.lang.Override
      public boolean containsPlmFiles(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetPlmFiles().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getPlmFilesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> getPlmFiles() {
        return getPlmFilesMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> getPlmFilesMap() {
        return internalGetPlmFiles().getImmutableMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
plm.freecad.FreecadPlm.PlmFile getPlmFilesOrDefault(
          java.lang.String key,
          /* nullable */
plm.freecad.FreecadPlm.PlmFile defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder> map = internalGetMutablePlmFiles().ensureBuilderMap();
        return map.containsKey(key) ? plmFilesConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmFile getPlmFilesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder> map = internalGetMutablePlmFiles().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return plmFilesConverter.build(map.get(key));
      }
      public Builder clearPlmFiles() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutablePlmFiles().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      public Builder removePlmFiles(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutablePlmFiles().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile>
          getMutablePlmFiles() {
        bitField0_ |= 0x00000001;
        return internalGetMutablePlmFiles().ensureMessageMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      public Builder putPlmFiles(
          java.lang.String key,
          plm.freecad.FreecadPlm.PlmFile value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutablePlmFiles().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      public Builder putAllPlmFiles(
          java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFile> values) {
        for (java.util.Map.Entry<java.lang.String, plm.freecad.FreecadPlm.PlmFile> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutablePlmFiles().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmFile&gt; plmFiles = 1;</code>
       */
      public plm.freecad.FreecadPlm.PlmFile.Builder putPlmFilesBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmFileOrBuilder> builderMap = internalGetMutablePlmFiles().ensureBuilderMap();
        plm.freecad.FreecadPlm.PlmFileOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = plm.freecad.FreecadPlm.PlmFile.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof plm.freecad.FreecadPlm.PlmFile) {
          entry = ((plm.freecad.FreecadPlm.PlmFile) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (plm.freecad.FreecadPlm.PlmFile.Builder) entry;
      }

      private static final class LinksConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder, plm.freecad.FreecadPlm.PlmLink> {
        @java.lang.Override
        public plm.freecad.FreecadPlm.PlmLink build(plm.freecad.FreecadPlm.PlmLinkOrBuilder val) {
          if (val instanceof plm.freecad.FreecadPlm.PlmLink) { return (plm.freecad.FreecadPlm.PlmLink) val; }
          return ((plm.freecad.FreecadPlm.PlmLink.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, plm.freecad.FreecadPlm.PlmLink> defaultEntry() {
          return LinksDefaultEntryHolder.defaultEntry;
        }
      };
      private static final LinksConverter linksConverter = new LinksConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder, plm.freecad.FreecadPlm.PlmLink, plm.freecad.FreecadPlm.PlmLink.Builder> links_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder, plm.freecad.FreecadPlm.PlmLink, plm.freecad.FreecadPlm.PlmLink.Builder>
          internalGetLinks() {
        if (links_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(linksConverter);
        }
        return links_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder, plm.freecad.FreecadPlm.PlmLink, plm.freecad.FreecadPlm.PlmLink.Builder>
          internalGetMutableLinks() {
        if (links_ == null) {
          links_ = new com.google.protobuf.MapFieldBuilder<>(linksConverter);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return links_;
      }
      public int getLinksCount() {
        return internalGetLinks().ensureBuilderMap().size();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      @java.lang.Override
      public boolean containsLinks(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetLinks().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getLinksMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> getLinks() {
        return getLinksMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> getLinksMap() {
        return internalGetLinks().getImmutableMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
plm.freecad.FreecadPlm.PlmLink getLinksOrDefault(
          java.lang.String key,
          /* nullable */
plm.freecad.FreecadPlm.PlmLink defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder> map = internalGetMutableLinks().ensureBuilderMap();
        return map.containsKey(key) ? linksConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      @java.lang.Override
      public plm.freecad.FreecadPlm.PlmLink getLinksOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder> map = internalGetMutableLinks().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return linksConverter.build(map.get(key));
      }
      public Builder clearLinks() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableLinks().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      public Builder removeLinks(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableLinks().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink>
          getMutableLinks() {
        bitField0_ |= 0x00000002;
        return internalGetMutableLinks().ensureMessageMap();
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      public Builder putLinks(
          java.lang.String key,
          plm.freecad.FreecadPlm.PlmLink value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableLinks().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      public Builder putAllLinks(
          java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLink> values) {
        for (java.util.Map.Entry<java.lang.String, plm.freecad.FreecadPlm.PlmLink> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableLinks().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .plm.freecad.PlmLink&gt; links = 2;</code>
       */
      public plm.freecad.FreecadPlm.PlmLink.Builder putLinksBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, plm.freecad.FreecadPlm.PlmLinkOrBuilder> builderMap = internalGetMutableLinks().ensureBuilderMap();
        plm.freecad.FreecadPlm.PlmLinkOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = plm.freecad.FreecadPlm.PlmLink.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof plm.freecad.FreecadPlm.PlmLink) {
          entry = ((plm.freecad.FreecadPlm.PlmLink) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (plm.freecad.FreecadPlm.PlmLink.Builder) entry;
      }

      // @@protoc_insertion_point(builder_scope:plm.freecad.Bucket)
    }

    // @@protoc_insertion_point(class_scope:plm.freecad.Bucket)
    private static final plm.freecad.FreecadPlm.Bucket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new plm.freecad.FreecadPlm.Bucket();
    }

    public static plm.freecad.FreecadPlm.Bucket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Bucket>
        PARSER = new com.google.protobuf.AbstractParser<Bucket>() {
      @java.lang.Override
      public Bucket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Bucket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Bucket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public plm.freecad.FreecadPlm.Bucket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_plm_freecad_PlmFile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_plm_freecad_PlmFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_plm_freecad_PlmLink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_plm_freecad_PlmLink_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_plm_freecad_Bucket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_plm_freecad_Bucket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_plm_freecad_Bucket_PlmFilesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_plm_freecad_Bucket_PlmFilesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_plm_freecad_Bucket_LinksEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_plm_freecad_Bucket_LinksEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021freecad_plm.proto\022\013plm.freecad\"\215\002\n\007Plm" +
      "File\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\014 \001(\t\022\020\n\010fileNa" +
      "me\030\002 \001(\t\022\r\n\005label\030\003 \001(\t\022\026\n\016lastModifiedB" +
      "y\030\004 \001(\t\022\030\n\020lastModifiedDate\030\005 \001(\t\022\017\n\007com" +
      "ment\030\006 \001(\t\022\017\n\007company\030\007 \001(\t\022\021\n\tcreatedBy" +
      "\030\010 \001(\t\022\023\n\013createdDate\030\t \001(\t\022\024\n\014externalL" +
      "ink\030\n \003(\t\022\023\n\013fileContent\030\013 \001(\014\022\017\n\007cTimeN" +
      "s\030\r \001(\003\022\017\n\007uTimeNs\030\016 \001(\003\"\361\001\n\007PlmLink\022\024\n\014" +
      "linkedObject\030\001 \001(\t\022\026\n\016linkClaimChild\030\002 \001" +
      "(\010\022\025\n\rlinkTransform\030\003 \001(\010\022C\n\020linkCopyOnC" +
      "hange\030\004 \001(\0162).plm.freecad.PlmLink.LinkCo" +
      "pyOnChangeEnum\022\r\n\005scale\030\005 \001(\001\022\017\n\007plmFile" +
      "\030\006 \001(\t\"<\n\024LinkCopyOnChangeEnum\022\014\n\010Disabl" +
      "ed\020\000\022\013\n\007Enabled\020\001\022\t\n\005Owned\020\002\"\367\001\n\006Bucket\022" +
      "3\n\010plmFiles\030\001 \003(\0132!.plm.freecad.Bucket.P" +
      "lmFilesEntry\022-\n\005links\030\002 \003(\0132\036.plm.freeca" +
      "d.Bucket.LinksEntry\032E\n\rPlmFilesEntry\022\013\n\003" +
      "key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.plm.freecad.P" +
      "lmFile:\0028\001\032B\n\nLinksEntry\022\013\n\003key\030\001 \001(\t\022#\n" +
      "\005value\030\002 \001(\0132\024.plm.freecad.PlmLink:\0028\001b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_plm_freecad_PlmFile_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_plm_freecad_PlmFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_plm_freecad_PlmFile_descriptor,
        new java.lang.String[] { "Id", "Name", "FileName", "Label", "LastModifiedBy", "LastModifiedDate", "Comment", "Company", "CreatedBy", "CreatedDate", "ExternalLink", "FileContent", "CTimeNs", "UTimeNs", });
    internal_static_plm_freecad_PlmLink_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_plm_freecad_PlmLink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_plm_freecad_PlmLink_descriptor,
        new java.lang.String[] { "LinkedObject", "LinkClaimChild", "LinkTransform", "LinkCopyOnChange", "Scale", "PlmFile", });
    internal_static_plm_freecad_Bucket_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_plm_freecad_Bucket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_plm_freecad_Bucket_descriptor,
        new java.lang.String[] { "PlmFiles", "Links", });
    internal_static_plm_freecad_Bucket_PlmFilesEntry_descriptor =
      internal_static_plm_freecad_Bucket_descriptor.getNestedTypes().get(0);
    internal_static_plm_freecad_Bucket_PlmFilesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_plm_freecad_Bucket_PlmFilesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_plm_freecad_Bucket_LinksEntry_descriptor =
      internal_static_plm_freecad_Bucket_descriptor.getNestedTypes().get(1);
    internal_static_plm_freecad_Bucket_LinksEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_plm_freecad_Bucket_LinksEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
